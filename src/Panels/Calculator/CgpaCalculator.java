package Panels.Calculator;

import Mainpackage.*;
import java.text.DecimalFormat;

public class CgpaCalculator extends javax.swing.JPanel {
    //Check 1 is used to calculate the number of times, getprdctCG function is successfully executed
    //Check 2 is used to calculate the number of times, the valid inputs are typed
    int Check_1=0, Check_2=0;
    
    //This is a object that will help to use only 2digits after decimal point
    private static DecimalFormat df2 = new DecimalFormat(".##");
    
    
    //This function will calculate the obtained grade from marks
    private double getGPA(double marks){
        double gpa=0;
        
        if(marks >= 80 && marks <= 100)
            gpa=4;//A+        
        else if(marks >= 75 && marks <= 79)
            gpa=3.75;//A        
        else if(marks >= 70 && marks <= 74)
            gpa=3.5;//A-        
        else if(marks >= 65 && marks <= 69)
            gpa=3.25;//B+        
        else if(marks >= 60 && marks <= 64)
            gpa=3;//B       
        else if(marks >= 55 && marks <= 59)
            gpa=2.75;//B-        
        else if(marks >= 50 && marks <= 54)
            gpa=2.5;//C+       
        else if(marks >= 45 && marks <= 49)
            gpa=2.25;//C     
        else if(marks >= 40 && marks <= 44)
            gpa=2;//D 
        else if(marks >= 0 && marks <= 39)
            gpa=0;//F
            
        return gpa;
    }
    
    
    //This function will calculate the product of grade point and credit hour
    private double getprdctCG(double mark, double crHour, int courseNo){
        double prdctCG=0;
        
        //may throw exception if credit hour is not 0-15 and mark is not 0-100
        try {
            if(crHour <= 0 || crHour >15)
                    throw new InputException("Invalid input of Course: "+courseNo+"'s Credit Hour(0-15).");
            if(mark <0 || mark >100)
                    throw new InputException("Invalid input of Course: "+courseNo+"'s Mark(0-100).");
            
            //this will convert marks into grade point and will multiply by credit hour
            //after that, it will store in the variable prdctCG
            prdctCG = getGPA(mark)*crHour;
            Check_1++;
            //System.out.println(prdctCG);
        
        }catch(InputException e){
        } catch (Exception e) {
            ErrorWindow ob = new ErrorWindow();        
            ob.setErrorText("Invalid Input");
            ob.setVisible(true);
        }
        return prdctCG;
    }
    
    
 
    public CgpaCalculator() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ApplicationWindow = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jText_crHour1 = new javax.swing.JTextField();
        jText_crHour2 = new javax.swing.JTextField();
        jText_crHour3 = new javax.swing.JTextField();
        jText_crHour4 = new javax.swing.JTextField();
        jText_crHour5 = new javax.swing.JTextField();
        jText_crHour6 = new javax.swing.JTextField();
        jText_crHour7 = new javax.swing.JTextField();
        jText_crHour8 = new javax.swing.JTextField();
        jText_crHour9 = new javax.swing.JTextField();
        jText_crHour10 = new javax.swing.JTextField();
        jText_crHour11 = new javax.swing.JTextField();
        jText_crHour12 = new javax.swing.JTextField();
        jText_mark1 = new javax.swing.JTextField();
        jText_mark2 = new javax.swing.JTextField();
        jText_mark3 = new javax.swing.JTextField();
        jText_mark4 = new javax.swing.JTextField();
        jText_mark5 = new javax.swing.JTextField();
        jText_mark6 = new javax.swing.JTextField();
        jText_mark7 = new javax.swing.JTextField();
        jText_mark8 = new javax.swing.JTextField();
        jText_mark9 = new javax.swing.JTextField();
        jText_mark10 = new javax.swing.JTextField();
        jText_mark11 = new javax.swing.JTextField();
        jText_mark12 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jText_totalCGPA = new javax.swing.JTextField();
        jText_totalCrHour = new javax.swing.JTextField();
        CalculateButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 0, 153));
        setMinimumSize(new java.awt.Dimension(700, 500));
        setOpaque(false);
        setLayout(new java.awt.GridBagLayout());

        ApplicationWindow.setMinimumSize(new java.awt.Dimension(700, 500));
        ApplicationWindow.setOpaque(false);
        ApplicationWindow.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("CGPA Calculator");
        jLabel1.setToolTipText("");
        ApplicationWindow.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(219, 14, -1, -1));

        jLabel3.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Credit Hours:");
        ApplicationWindow.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 60, -1, -1));

        jText_crHour1.setBackground(new java.awt.Color(204, 204, 204));
        jText_crHour1.setFont(new java.awt.Font("Mongolian Baiti", 1, 18)); // NOI18N
        jText_crHour1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText_crHour1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ApplicationWindow.add(jText_crHour1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, 117, -1));

        jText_crHour2.setBackground(new java.awt.Color(204, 204, 204));
        jText_crHour2.setFont(new java.awt.Font("Mongolian Baiti", 1, 18)); // NOI18N
        jText_crHour2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText_crHour2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ApplicationWindow.add(jText_crHour2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, 117, -1));

        jText_crHour3.setBackground(new java.awt.Color(204, 204, 204));
        jText_crHour3.setFont(new java.awt.Font("Mongolian Baiti", 1, 18)); // NOI18N
        jText_crHour3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText_crHour3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ApplicationWindow.add(jText_crHour3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 150, 117, -1));

        jText_crHour4.setBackground(new java.awt.Color(204, 204, 204));
        jText_crHour4.setFont(new java.awt.Font("Mongolian Baiti", 1, 18)); // NOI18N
        jText_crHour4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText_crHour4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ApplicationWindow.add(jText_crHour4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 180, 117, -1));

        jText_crHour5.setBackground(new java.awt.Color(204, 204, 204));
        jText_crHour5.setFont(new java.awt.Font("Mongolian Baiti", 1, 18)); // NOI18N
        jText_crHour5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText_crHour5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ApplicationWindow.add(jText_crHour5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 210, 117, -1));

        jText_crHour6.setBackground(new java.awt.Color(204, 204, 204));
        jText_crHour6.setFont(new java.awt.Font("Mongolian Baiti", 1, 18)); // NOI18N
        jText_crHour6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText_crHour6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ApplicationWindow.add(jText_crHour6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 240, 117, -1));

        jText_crHour7.setBackground(new java.awt.Color(204, 204, 204));
        jText_crHour7.setFont(new java.awt.Font("Mongolian Baiti", 1, 18)); // NOI18N
        jText_crHour7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText_crHour7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ApplicationWindow.add(jText_crHour7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 270, 117, -1));

        jText_crHour8.setBackground(new java.awt.Color(204, 204, 204));
        jText_crHour8.setFont(new java.awt.Font("Mongolian Baiti", 1, 18)); // NOI18N
        jText_crHour8.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText_crHour8.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ApplicationWindow.add(jText_crHour8, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 300, 117, -1));

        jText_crHour9.setBackground(new java.awt.Color(204, 204, 204));
        jText_crHour9.setFont(new java.awt.Font("Mongolian Baiti", 1, 18)); // NOI18N
        jText_crHour9.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText_crHour9.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ApplicationWindow.add(jText_crHour9, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 330, 117, -1));

        jText_crHour10.setBackground(new java.awt.Color(204, 204, 204));
        jText_crHour10.setFont(new java.awt.Font("Mongolian Baiti", 1, 18)); // NOI18N
        jText_crHour10.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText_crHour10.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ApplicationWindow.add(jText_crHour10, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 360, 117, -1));

        jText_crHour11.setBackground(new java.awt.Color(204, 204, 204));
        jText_crHour11.setFont(new java.awt.Font("Mongolian Baiti", 1, 18)); // NOI18N
        jText_crHour11.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText_crHour11.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ApplicationWindow.add(jText_crHour11, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 390, 117, -1));

        jText_crHour12.setBackground(new java.awt.Color(204, 204, 204));
        jText_crHour12.setFont(new java.awt.Font("Mongolian Baiti", 1, 18)); // NOI18N
        jText_crHour12.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText_crHour12.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ApplicationWindow.add(jText_crHour12, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 420, 117, -1));

        jText_mark1.setBackground(new java.awt.Color(204, 204, 204));
        jText_mark1.setFont(new java.awt.Font("Mongolian Baiti", 1, 18)); // NOI18N
        jText_mark1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText_mark1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ApplicationWindow.add(jText_mark1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 90, 143, -1));

        jText_mark2.setBackground(new java.awt.Color(204, 204, 204));
        jText_mark2.setFont(new java.awt.Font("Mongolian Baiti", 1, 18)); // NOI18N
        jText_mark2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText_mark2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ApplicationWindow.add(jText_mark2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 120, 143, -1));

        jText_mark3.setBackground(new java.awt.Color(204, 204, 204));
        jText_mark3.setFont(new java.awt.Font("Mongolian Baiti", 1, 18)); // NOI18N
        jText_mark3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText_mark3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ApplicationWindow.add(jText_mark3, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 150, 143, -1));

        jText_mark4.setBackground(new java.awt.Color(204, 204, 204));
        jText_mark4.setFont(new java.awt.Font("Mongolian Baiti", 1, 18)); // NOI18N
        jText_mark4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText_mark4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ApplicationWindow.add(jText_mark4, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 180, 143, -1));

        jText_mark5.setBackground(new java.awt.Color(204, 204, 204));
        jText_mark5.setFont(new java.awt.Font("Mongolian Baiti", 1, 18)); // NOI18N
        jText_mark5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText_mark5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ApplicationWindow.add(jText_mark5, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 210, 143, -1));

        jText_mark6.setBackground(new java.awt.Color(204, 204, 204));
        jText_mark6.setFont(new java.awt.Font("Mongolian Baiti", 1, 18)); // NOI18N
        jText_mark6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText_mark6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ApplicationWindow.add(jText_mark6, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 240, 143, -1));

        jText_mark7.setBackground(new java.awt.Color(204, 204, 204));
        jText_mark7.setFont(new java.awt.Font("Mongolian Baiti", 1, 18)); // NOI18N
        jText_mark7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText_mark7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ApplicationWindow.add(jText_mark7, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 270, 143, -1));

        jText_mark8.setBackground(new java.awt.Color(204, 204, 204));
        jText_mark8.setFont(new java.awt.Font("Mongolian Baiti", 1, 18)); // NOI18N
        jText_mark8.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText_mark8.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ApplicationWindow.add(jText_mark8, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 300, 143, -1));

        jText_mark9.setBackground(new java.awt.Color(204, 204, 204));
        jText_mark9.setFont(new java.awt.Font("Mongolian Baiti", 1, 18)); // NOI18N
        jText_mark9.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText_mark9.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ApplicationWindow.add(jText_mark9, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 330, 143, -1));

        jText_mark10.setBackground(new java.awt.Color(204, 204, 204));
        jText_mark10.setFont(new java.awt.Font("Mongolian Baiti", 1, 18)); // NOI18N
        jText_mark10.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText_mark10.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ApplicationWindow.add(jText_mark10, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 360, 143, -1));

        jText_mark11.setBackground(new java.awt.Color(204, 204, 204));
        jText_mark11.setFont(new java.awt.Font("Mongolian Baiti", 1, 18)); // NOI18N
        jText_mark11.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText_mark11.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ApplicationWindow.add(jText_mark11, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 390, 143, -1));

        jText_mark12.setBackground(new java.awt.Color(204, 204, 204));
        jText_mark12.setFont(new java.awt.Font("Mongolian Baiti", 1, 18)); // NOI18N
        jText_mark12.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText_mark12.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ApplicationWindow.add(jText_mark12, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 420, 143, -1));

        jLabel6.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("CGPA:");
        ApplicationWindow.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 330, 203, -1));

        jLabel5.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Obtained Marks:");
        ApplicationWindow.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 60, -1, -1));

        jLabel7.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Total credit hours completed:");
        ApplicationWindow.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 270, -1, -1));

        jText_totalCGPA.setEditable(false);
        jText_totalCGPA.setBackground(new java.awt.Color(204, 204, 204));
        jText_totalCGPA.setFont(new java.awt.Font("Mongolian Baiti", 1, 18)); // NOI18N
        jText_totalCGPA.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText_totalCGPA.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ApplicationWindow.add(jText_totalCGPA, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 350, 127, -1));

        jText_totalCrHour.setEditable(false);
        jText_totalCrHour.setBackground(new java.awt.Color(204, 204, 204));
        jText_totalCrHour.setFont(new java.awt.Font("Mongolian Baiti", 1, 18)); // NOI18N
        jText_totalCrHour.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText_totalCrHour.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ApplicationWindow.add(jText_totalCrHour, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 300, 126, -1));

        CalculateButton.setBackground(new java.awt.Color(44, 60, 76));
        CalculateButton.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        CalculateButton.setForeground(new java.awt.Color(255, 255, 255));
        CalculateButton.setText("Calculate");
        CalculateButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        CalculateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CalculateButtonActionPerformed(evt);
            }
        });
        ApplicationWindow.add(CalculateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 210, -1, -1));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(0, 2));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 2, Short.MAX_VALUE)
        );

        ApplicationWindow.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 498, 700, -1));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(0, 2));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 2, Short.MAX_VALUE)
        );

        ApplicationWindow.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, -1));

        jLabel2.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("12");
        ApplicationWindow.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 420, 30, 30));

        jLabel4.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("1");
        ApplicationWindow.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 20, 30));

        jLabel8.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("2");
        ApplicationWindow.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 20, 30));

        jLabel9.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("3");
        ApplicationWindow.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 20, 30));

        jLabel10.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("4");
        ApplicationWindow.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 20, 30));

        jLabel11.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("5");
        ApplicationWindow.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, 20, 30));

        jLabel12.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("6");
        ApplicationWindow.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, 20, 30));

        jLabel13.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("7");
        ApplicationWindow.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, 20, 30));

        jLabel14.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("8");
        ApplicationWindow.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 300, 20, 30));

        jLabel15.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("9");
        ApplicationWindow.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 330, 20, 30));

        jLabel16.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("10");
        ApplicationWindow.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 360, 30, 30));

        jLabel17.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("11");
        ApplicationWindow.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 390, 30, 30));

        add(ApplicationWindow, new java.awt.GridBagConstraints());
    }// </editor-fold>//GEN-END:initComponents

    private void CalculateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CalculateButtonActionPerformed
        double totalCrHour=0, totalCGPA=0, prdctCG=0;
        
        Check_1=0;
        Check_2=0;
        jText_totalCrHour.setText("");
        jText_totalCGPA.setText("");
        
        //If both credit hour field and mark field have value, then it will do the following process
        if((!jText_crHour1.getText().equals("") && !jText_mark1.getText().equals(""))){
            //it will throw exception if something other than numbers are typed
            
            try {
                //Getting value from credit hour field
                double crHour1 =Double.parseDouble(jText_crHour1.getText());
                totalCrHour = totalCrHour+crHour1;
                //Getting value from credit hour field
                double mark1 =Double.parseDouble(jText_mark1.getText());
                //this will calculate the sum of product cumulative grade
                prdctCG = prdctCG + getprdctCG(mark1, crHour1,1);
                Check_2++;
            }catch(Exception e){
                ErrorWindow ob = new ErrorWindow();        
                ob.setErrorText("Invalid Input");
                ob.setVisible(true);
            } 
        }
        //If both credit hour field and mark field have value, then it will do the following process
        if((!jText_crHour2.getText().equals("") && !jText_mark2.getText().equals(""))){
            //it will throw exception if something other than numbers are typed
            try {
                //Getting value from credit hour field
                double crHour2 =Double.parseDouble(jText_crHour2.getText());
                totalCrHour = totalCrHour+crHour2;
                
                //Getting value from credit hour field
                double mark2 =Double.parseDouble(jText_mark2.getText());
   
                //this will calculate the sum of product cumulative grade
                prdctCG = prdctCG + getprdctCG(mark2, crHour2,2);
                Check_2++;
            }catch(Exception e){
                ErrorWindow ob = new ErrorWindow();        
                ob.setErrorText("Invalid Input");
                ob.setVisible(true);
            } 
        }
        //If both credit hour field and mark field have value, then it will do the following process
        if((!jText_crHour3.getText().equals("") && !jText_mark3.getText().equals(""))){
            //it will throw exception if something other than numbers are typed
            try {
                //Getting value from credit hour field
                double crHour3 =Double.parseDouble(jText_crHour3.getText());
                totalCrHour = totalCrHour+crHour3;
                
                //Getting value from credit hour field
                double mark3 =Double.parseDouble(jText_mark3.getText());
   
                //this will calculate the sum of product cumulative grade
                prdctCG = prdctCG + getprdctCG(mark3, crHour3,3);
                Check_2++;
            }catch(Exception e){
                ErrorWindow ob = new ErrorWindow();        
                ob.setErrorText("Invalid Input");
                ob.setVisible(true);
            } 
        }
        //If both credit hour field and mark field have value, then it will do the following process
        if((!jText_crHour4.getText().equals("") && !jText_mark4.getText().equals(""))){
            //it will throw exception if something other than numbers are typed
            try {
                //Getting value from credit hour field
                double crHour4 =Double.parseDouble(jText_crHour4.getText());
                totalCrHour = totalCrHour+crHour4;
                
                //Getting value from credit hour field
                double mark4 =Double.parseDouble(jText_mark4.getText());
   
                //this will calculate the sum of product cumulative grade
                prdctCG = prdctCG + getprdctCG(mark4, crHour4,4);
                Check_2++;
            }catch(Exception e){
                ErrorWindow ob = new ErrorWindow();        
                ob.setErrorText("Invalid Input");
                ob.setVisible(true);
            } 
        }
        //If both credit hour field and mark field have value, then it will do the following process
        if((!jText_crHour5.getText().equals("") && !jText_mark5.getText().equals(""))){
            //it will throw exception if something other than numbers are typed
            try {
                //Getting value from credit hour field
                double crHour5 =Double.parseDouble(jText_crHour5.getText());
                totalCrHour = totalCrHour+crHour5;
                
                //Getting value from credit hour field
                double mark5 =Double.parseDouble(jText_mark5.getText());
   
                //this will calculate the sum of product cumulative grade
                prdctCG = prdctCG + getprdctCG(mark5, crHour5,5);
                Check_2++;
            }catch(Exception e){
                ErrorWindow ob = new ErrorWindow();        
                ob.setErrorText("Invalid Input");
                ob.setVisible(true);
            } 
        }
        //If both credit hour field and mark field have value, then it will do the following process
        if((!jText_crHour6.getText().equals("") && !jText_mark6.getText().equals(""))){
            //it will throw exception if something other than numbers are typed
            try {
                //Getting value from credit hour field
                double crHour6 =Double.parseDouble(jText_crHour6.getText());
                totalCrHour = totalCrHour+crHour6;
                
                //Getting value from credit hour field
                double mark6 =Double.parseDouble(jText_mark6.getText());
   
                //this will calculate the sum of product cumulative grade
                prdctCG = prdctCG + getprdctCG(mark6, crHour6,6);
                Check_2++;
            }catch(Exception e){
                ErrorWindow ob = new ErrorWindow();        
                ob.setErrorText("Invalid Input");
                ob.setVisible(true);
            } 
        }
        //If both credit hour field and mark field have value, then it will do the following process
        if((!jText_crHour7.getText().equals("") && !jText_mark7.getText().equals(""))){
            //it will throw exception if something other than numbers are typed
            try {
                //Getting value from credit hour field
                double crHour7 =Double.parseDouble(jText_crHour7.getText());
                totalCrHour = totalCrHour+crHour7;
                
                //Getting value from credit hour field
                double mark7 =Double.parseDouble(jText_mark7.getText());
   
                //this will calculate the sum of product cumulative grade
                prdctCG = prdctCG + getprdctCG(mark7, crHour7,7);
                Check_2++;
            }catch(Exception e){
                ErrorWindow ob = new ErrorWindow();        
                ob.setErrorText("Invalid Input");
                ob.setVisible(true);
            } 
        }
        //If both credit hour field and mark field have value, then it will do the following process
        if((!jText_crHour8.getText().equals("") && !jText_mark8.getText().equals(""))){
            //it will throw exception if something other than numbers are typed
            try {
                //Getting value from credit hour field
                double crHour8 =Double.parseDouble(jText_crHour8.getText());
                totalCrHour = totalCrHour+crHour8;
                
                //Getting value from credit hour field
                double mark8 =Double.parseDouble(jText_mark8.getText());
   
                //this will calculate the sum of product cumulative grade
                prdctCG = prdctCG + getprdctCG(mark8, crHour8,8);
                Check_2++;
            }catch(Exception e){
                ErrorWindow ob = new ErrorWindow();        
                ob.setErrorText("Invalid Input");
                ob.setVisible(true);
            } 
        }
        //If both credit hour field and mark field have value, then it will do the following process
        if((!jText_crHour9.getText().equals("") && !jText_mark9.getText().equals(""))){
            //it will throw exception if something other than numbers are typed
            try {
                //Getting value from credit hour field
                double crHour9 =Double.parseDouble(jText_crHour9.getText());
                totalCrHour = totalCrHour+crHour9;
                
                //Getting value from credit hour field
                double mark9 =Double.parseDouble(jText_mark9.getText());
   
                //this will calculate the sum of product cumulative grade
                prdctCG = prdctCG + getprdctCG(mark9, crHour9,9);
                Check_2++;
            }catch(Exception e){
                ErrorWindow ob = new ErrorWindow();        
                ob.setErrorText("Invalid Input");
                ob.setVisible(true);
            } 
        }
        //If both credit hour field and mark field have value, then it will do the following process
        if((!jText_crHour10.getText().equals("") && !jText_mark10.getText().equals(""))){
            //it will throw exception if something other than numbers are typed
            try {
                //Getting value from credit hour field
                double crHour10 =Double.parseDouble(jText_crHour10.getText());
                totalCrHour = totalCrHour+crHour10;
                
                //Getting value from credit hour field
                double mark10 =Double.parseDouble(jText_mark10.getText());
   
                //this will calculate the sum of product cumulative grade
                prdctCG = prdctCG + getprdctCG(mark10, crHour10,10);
                Check_2++;
            }catch(Exception e){
                ErrorWindow ob = new ErrorWindow();        
                ob.setErrorText("Invalid Input");
                ob.setVisible(true);
            } 
        }
        //If both credit hour field and mark field have value, then it will do the following process
        if((!jText_crHour11.getText().equals("") && !jText_mark11.getText().equals(""))){
            //it will throw exception if something other than numbers are typed
            try {
                //Getting value from credit hour field
                double crHour11 =Double.parseDouble(jText_crHour11.getText());
                totalCrHour = totalCrHour+crHour11;
                
                //Getting value from credit hour field
                double mark11 =Double.parseDouble(jText_mark11.getText());
   
                //this will calculate the sum of product cumulative grade
                prdctCG = prdctCG + getprdctCG(mark11, crHour11,11);
                Check_2++;
            }catch(Exception e){
                ErrorWindow ob = new ErrorWindow();        
                ob.setErrorText("Invalid Input");
                ob.setVisible(true);
            } 
        }
        //If both credit hour field and mark field have value, then it will do the following process
        if((!jText_crHour12.getText().equals("") && !jText_mark12.getText().equals(""))){
            //it will throw exception if something other than numbers are typed
            try {
                //Getting value from credit hour field
                double crHour12 =Double.parseDouble(jText_crHour12.getText());
                totalCrHour = totalCrHour+crHour12;
                
                //Getting value from credit hour field
                double mark12 =Double.parseDouble(jText_mark12.getText());
   
                //this will calculate the sum of product cumulative grade
                prdctCG = prdctCG + getprdctCG(mark12, crHour12,12);
                Check_2++;
            }catch(Exception e){
                ErrorWindow ob = new ErrorWindow();        
                ob.setErrorText("Invalid Input");
                ob.setVisible(true);
            } 
        }
            
        //this will only execute if the inputs are given correctly in corresponding box
        if(Check_1==Check_2){
            try {
                totalCGPA = prdctCG/totalCrHour;
                //fixing two digits after decimal point
                totalCGPA=Double.parseDouble(df2.format(totalCGPA));

                //this wll set set the values of Total credti hour and Total CGPA into text field.
                jText_totalCrHour.setText(Double.toString(totalCrHour));
                jText_totalCGPA.setText(Double.toString(totalCGPA));
                }catch (Exception e){
                    ErrorWindow ob = new ErrorWindow();        
                    ob.setErrorText("Invalid Input");
                    ob.setVisible(true);
            }
        }
        
        
    }//GEN-LAST:event_CalculateButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ApplicationWindow;
    private javax.swing.JButton CalculateButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jText_crHour1;
    private javax.swing.JTextField jText_crHour10;
    private javax.swing.JTextField jText_crHour11;
    private javax.swing.JTextField jText_crHour12;
    private javax.swing.JTextField jText_crHour2;
    private javax.swing.JTextField jText_crHour3;
    private javax.swing.JTextField jText_crHour4;
    private javax.swing.JTextField jText_crHour5;
    private javax.swing.JTextField jText_crHour6;
    private javax.swing.JTextField jText_crHour7;
    private javax.swing.JTextField jText_crHour8;
    private javax.swing.JTextField jText_crHour9;
    private javax.swing.JTextField jText_mark1;
    private javax.swing.JTextField jText_mark10;
    private javax.swing.JTextField jText_mark11;
    private javax.swing.JTextField jText_mark12;
    private javax.swing.JTextField jText_mark2;
    private javax.swing.JTextField jText_mark3;
    private javax.swing.JTextField jText_mark4;
    private javax.swing.JTextField jText_mark5;
    private javax.swing.JTextField jText_mark6;
    private javax.swing.JTextField jText_mark7;
    private javax.swing.JTextField jText_mark8;
    private javax.swing.JTextField jText_mark9;
    private javax.swing.JTextField jText_totalCGPA;
    private javax.swing.JTextField jText_totalCrHour;
    // End of variables declaration//GEN-END:variables
}
